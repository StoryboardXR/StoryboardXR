#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Bottom", "Left", "Right", "Top"]
    def Cube "Bottom" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Top/DefaultMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 1
        float3 xformOp:scale = (0.6, 0.05, 0.05)
        float3 xformOp:translate = (0, -0.16562, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:surface.connect = </Root/Bottom/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def Cube "Left" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Top/DefaultMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 1
        float3 xformOp:scale = (0.05, 0.28125, 0.05)
        float3 xformOp:translate = (-0.275, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:surface.connect = </Root/Left/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def Cube "Right" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Top/DefaultMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 1
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.05, 0.28125, 0.05)
        float3 xformOp:translate = (0.275, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:surface.connect = </Root/Right/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def Cube "Top" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Top/DefaultMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 1
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.6, 0.05, 0.05)
        float3 xformOp:translate = (0, 0.16562, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface.connect = </Root/Top/DefaultMaterial/PreviewSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/Top/DefaultMaterial/DefaultSurfaceShader.outputs:surface>
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (0, 110.5)

            def Shader "DefaultSurfaceShader" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }

            def Shader "PreviewSurface"
            {
                uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
                color3f inputs:diffuseColor = (0.59581345, 0.59581345, 0.59581345) (
                    colorSpace = "lin_srgb"
                )
                token outputs:out
                float2 ui:nodegraph:node:pos = (-255, 105)
                int ui:nodegraph:node:stackingOrder = 3
            }
        }
    }

    def RealityKitComponent "Collider"
    {
        uniform token info:id = "RealityKit.Collider"
        token type = "Default"

        def RealityKitStruct "Shape"
        {
            float3 extent = (0.6, 0.38124, 0.05)
            token shapeType = "Box"

            def RealityKitStruct "pose"
            {
            }
        }
    }

    def RealityKitComponent "InputTarget"
    {
        uniform token info:id = "RealityKit.InputTarget"
    }
}

